plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.graalvm.buildtools.native' version '0.9.20'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation('org.springframework.boot:spring-boot-starter-validation')
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	implementation "org.mapstruct:mapstruct:1.4.2.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	implementation 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
	testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
}

tasks.named('test') {
	useJUnitPlatform()
}
sourceSets {
	integration {
		java.srcDir "$projectDir/src/integration/java"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	integrationImplementation.extendsFrom testImplementation
	integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integration.output.classesDirs
	classpath = sourceSets.integration.runtimeClasspath
}

tasks.named('integrationTest') {
	useJUnitPlatform()
}

check.dependsOn integrationTest


